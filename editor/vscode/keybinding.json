// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "command": "editor.action.inspectTMScopes",
    "key": "cmd+shift+i"
  },
  {
    "command": "code-runner.run",
    "key": "shift+cmd+r"
  },
  {
    "command": "workbench.action.openRecent",
    "key": "cmd+o cmd+r"
  },
  // エクスプローラー
  //   https://github.com/asvetliakov/vscode-neovim/issues/457
  //   {
  //     "key": "j",
  //     "command": "list.focusDown",
  //     "when": "listFocus && !inputFocus"
  //   },
  //   {
  //     "key": "k",
  //     "command": "list.focusUp",
  //     "when": "listFocus && !inputFocus"
  //   },
  //   {
  //     "key": "h",
  //     "command": "list.collapse",
  //     "when": "listFocus && !inputFocus"
  //   },
  //   {
  //     "key": "l",
  //     "command": "list.select",
  //     "when": "listFocus && !inputFocus"
  //   },

  // サイドバーの表示トグル(サイドバーの表示・非表示)
  {
    "command": "workbench.view.explorer",
    "key": "ctrl+t",
    "when": "!explorerViewletVisible && vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+t",
    "when": "explorerViewletVisible && !searchViewletVisible && !inDebugMode && vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
  },
  // ファイルの時は"Enter" or "o"で同一タブで表示
  {
    "command": "multiCommand.exploreOpenClose",
    "key": "Enter",
    "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "multiCommand.exploreOpenClose",
    "key": "o",
    "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
  },
  //
  // フォルダのときは"Enter" or "o"で展開
  {
    "command": "list.toggleExpand",
    "key": "Enter",
    "when": "explorerViewletFocus && explorerViewletVisible && explorerResourceIsFolder && !inputFocus"
  },
  // "s"で別ウィンドウで開く
  {
    "command": "explorer.openToSide",
    "key": "s",
    "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
  },
  // neosnippet風展開
  {
    "key": "ctrl+k",
    "command": "jumpToNextSnippetPlaceholder",
    "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
  },
  {
    "key": "ctrl+shift+k",
    "command": "jumpToPrevSnippetPlaceholder",
    "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
  },
  {
    "key": "ctrl+k",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+o cmd+f",
    "command": "workbench.action.files.openFileFolder"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFileFolder"
},
{
    "key": "cmd+h",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
},
{
    "key": "cmd+k cmd+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
},
{
    "key": "cmd+h",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
},
{
    "key": "shift+cmd+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
},
{
    "key": "cmd+h",
    "command": "editor.action.showDefinitionPreviewHover"
},
{
    "key": "ctrl+cmd+h",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
},
{
    "key": "shift+escape",
    "command": "-closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
},
{
    "key": "ctrl+h",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.recording && neovim.mode == 'insert'"
}
]

