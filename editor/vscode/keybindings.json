// Place your key bindings in this file to override the defaults
[
    // explorer settings
    {
        "key": "ctrl+t",
        "command": "workbench.view.explorer",
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.toggleSidebarVisibility",
                "list.toggleExpand",
            ]
        },
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.toggleSidebarVisibility",
                "explorer.openToSide",
            ]
        },
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus && !explorerResourceIsFolder"
    },
    {
        "key": "j",
        "command": "runCommands",
        "args": {
            "commands": [
                "list.focusDown",
                "filesExplorer.openFilePreserveFocus",
            ],
        },
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "k",
        "command": "runCommands",
        "args": {
            "commands": [
                "list.focusUp",
                "filesExplorer.openFilePreserveFocus",
                // "list.toggleExpand",
            ],
        },
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "o",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.toggleTerminal",
    },

    // custom command
    // fuzzy finder
    {
        // file name search
        "key": "space f f",
        "command": "workbench.action.quickOpen",
        "when": "neovim.mode == normal && editorFocus"
    },
    {
        // grep search
        "key": "space f g",
        "command": "workbench.action.findInFiles",
        "when": "neovim.mode == normal && editorFocus"
    },

    // ai related
    {
        // quick chat
        "key": "space q c",
        "command": "workbench.action.openQuickChat",
        "when": "(neovim.mode == normal || neovim.mode == visual)&& editorFocus"
    },
    {
        // inline chat
        "key": "space i c",
        "command": "inlineChat.startWithCurrentLine",
        "args": "@workspace",
        "when": "(neovim.mode == normal || neovim.mode == visual)&& editorFocus"
    },
    {
        // explain code
        "key": "space e x",
        "command": "workbench.action.openQuickChat",
        "args": "@workspace /explain please explain the selected code",
        "when": "neovim.mode == visual && editorFocus"
    },
    {
        // refactor/fix code
        "key": "space r f",
        "command": "workbench.action.openQuickChat",
        "args": "@workspace /fix",
        "when": "neovim.mode == visual && editorFocus"
    },
    {
        // documentation
        "key": "space d d",
        "command": "workbench.action.openQuickChat",
        "args": "@workspace /doc please write a docstring for the selected code",
        "when": "neovim.mode == visual && editorFocus"
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
]